{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","services/persons.js","components/Notification.js","components/App.js","index.js"],"names":["Filter","filterCondition","handleFilterCondition","value","onChange","PersonForm","newPerson","handleNewName","handleNewNumber","addPerson","onSubmit","name","number","type","Persons","personList","removePerson","filteredPersons","filter","person","toLowerCase","includes","map","key","id","onClick","baseUrl","axios","get","then","response","data","newObject","post","delete","put","Notification","message","error","notificationStyle","color","fontSize","background","borderStyle","borderRadius","padding","marginBottom","errorStyle","style","className","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","setNewFilter","notificationMessage","setNotificationMessage","errorState","setErrorState","useEffect","personService","initialPersons","event","target","length","preventDefault","window","confirm","find","changedPerson","returnedPerson","setTimeout","catch","p","personObject","returnedPersons","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7117185a.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = ({filterCondition, handleFilterCondition}) => {\n    return (\n        <div>\n            Filter shown persons with: <input value={filterCondition} onChange={handleFilterCondition}/>\n        </div>\n    )\n}\n\nexport default Filter;","import React from 'react'\n\nconst PersonForm = ({newPerson, handleNewName, handleNewNumber, addPerson}) => {\n    return (\n        <form onSubmit={addPerson}>\n            <div>\n                Name: <input value={newPerson.name} onChange={handleNewName}/>\n            </div>\n            <div>\n                Number: <input value={newPerson.number} onChange={handleNewNumber}/>\n            </div>\n            <div>\n                <button type=\"submit\">add</button>\n            </div>\n        </form>\n    )\n}\n\nexport default PersonForm\n","import React from 'react'\n\n\nconst Persons = ({personList, filterCondition, removePerson}) => {\n    let filteredPersons = personList.filter(person => person.name.toLowerCase().includes(filterCondition.toLowerCase()))\n    return (\n        <div>\n            {filteredPersons.map(person => <p key={person.id}>{person.name}, {person.number} <button type={\"button\"} onClick={() => removePerson(person.id)}>remove</button></p>)}\n        </div>\n    )\n}\n\nexport default Persons","import axios from 'axios'\nconst baseUrl = 'https://blooming-bastion-97227.herokuapp.com/api/persons'\n    // 'http://localhost:3001/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = newObject => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n}\n\nconst remove = id => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    return request.then(response => response.data)\n}\n\nexport default { getAll, create, remove, update }","import React from 'react'\n\nconst Notification = ({ message, error}) => {\n    const notificationStyle = {\n        color: 'green',\n        fontSize: 20,\n        background: 'lightgrey',\n        borderStyle: 'solid',\n        borderRadius: 5,\n        padding: 10,\n        marginBottom: 10\n    }\n\n    const errorStyle = {...notificationStyle, color: 'red'}\n        // color: 'green',\n        // fontSize: 20,\n        // background: 'lightgrey',\n        // borderStyle: 'solid',\n        // borderRadius: 5,\n        // padding: 10,\n        // marginBottom: 10\n    // }\n\n\n    if (message === null) {\n        return null\n    }\n    if(error===true) {\n        return (\n            <div style={errorStyle} className=\"error\">\n                {message}\n            </div>\n        )\n    }else{\n        return (\n            <div style={notificationStyle} className=\"notification\">\n                {message}\n            </div>\n        )\n    }\n}\n\nexport default Notification","import React, { useState, useEffect } from 'react';\nimport Filter from './Filter'\nimport PersonForm from './PersonForm'\nimport Persons from './Persons'\nimport personService from '../services/persons'\nimport Notification from './Notification'\n\n\nconst App = () => {\n\n    const [persons, setPersons] = useState([])\n\n    const [newName, setNewName] = useState('')\n    const [newNumber, setNewNumber] = useState('')\n    const [filterCondition, setNewFilter] = useState('')\n    const [notificationMessage, setNotificationMessage] = useState(null)\n    const [errorState, setErrorState] = useState(false)\n\n    useEffect(() => {\n        personService\n            .getAll()\n            .then(initialPersons => {\n                setPersons(initialPersons)\n            })\n    }, [])\n\n    const handleNewName = (event) => {\n        setNewName(event.target.value)\n    }\n\n    const handleNewNumber = (event) => {\n        setNewNumber(event.target.value)\n    }\n\n    const handleFilterCondition = (event) => {\n        setNewFilter(event.target.value)\n    }\n\n\n    const addPerson = (event) => {\n        event.preventDefault()\n        if(!persons.map(person => person.name.toLowerCase()).includes(newName.toLowerCase())) {\n            const personObject = {\n                name: newName,\n                number: newNumber\n            }\n            personService\n                .create(personObject)\n                .then(returnedPersons => {\n                    setPersons(returnedPersons)\n                    setNewName('')\n                    setNewNumber('')\n                    setNotificationMessage(`Added ${personObject.name}`)\n                    setTimeout(() => {\n                        setNotificationMessage(null)\n                    }, 5000)\n                })\n        }else{\n            if(window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n                const person = persons.find(person =>person.name.toLowerCase() === newName.toLowerCase())\n                const changedPerson = {...person, number: newNumber}\n                personService\n                    .update(person.id, changedPerson)\n                    .then(returnedPerson => {\n                        setPersons(persons.map(person => person.id !== changedPerson.id ? person : returnedPerson))\n                        setNewName('')\n                        setNewNumber('')\n                        setNotificationMessage(`Changed ${person.name}'s number`)\n                        setTimeout(() => {\n                            setNotificationMessage(null)\n                        }, 5000)\n\n                    })\n                    .catch(() => {\n                        setErrorState(true)\n                        setNotificationMessage(`Information of ${person.name} has already been removed from server`)\n                        setTimeout(() => {\n                            setNotificationMessage(null)\n                            setErrorState(false)\n                        }, 5000)\n                        setPersons(persons.filter(p => p.id !== person.id))\n                    })\n            }\n        }\n    }\n\n    const removePerson = id =>  {\n        const person = persons.find(person => person.id === id)\n        if(window.confirm(`Really remove ${person.name}`)) {\n            personService\n                .remove(id)\n                .then( () => {\n                    personService\n                        .getAll()\n                        .then(returnedPersons => {setPersons(returnedPersons)}\n                )\n                    setNotificationMessage(`Removed ${person.name}`)\n                    setTimeout(() => {\n                        setNotificationMessage(null)\n                    }, 5000)\n\n                })\n        }\n    }\n\n    const personObject = () => {\n        return(\n            {name: newName,\n           number: newNumber,\n           id: persons.length+1}\n        )\n    }\n\n    return (\n        <div>\n            <h1>Phonebook</h1>\n            <Notification message={notificationMessage} error={errorState}/>\n            <Filter filterCondition={filterCondition} handleFilterCondition={handleFilterCondition} />\n            <h2>Add new person</h2>\n            <PersonForm newPerson={personObject()} handleNewName={handleNewName} handleNewNumber={handleNewNumber} addPerson={addPerson}/>\n            <h2>Numbers</h2>\n            <Persons personList={persons} filterCondition={filterCondition} removePerson={removePerson}/>\n        </div>\n    )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}